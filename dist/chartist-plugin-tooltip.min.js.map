{"version":3,"sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","show","element","hasClass","className","hide","regex","RegExp","replace","trim","getAttribute","indexOf","defaultOptions","currency","undefined","currencyFormatCallback","tooltipOffset","x","y","anchorToPoint","appendToBody","class","pointClass","plugins","tooltip","options","updateTooltipContentFromDataset","chart","on","data","dataPoint","tooltipContent","series","index","dataElement","type","value","attr","data-tooltip","querySelector","_node","dataElementGroup","parentNode","setAttribute","extend","event","selector","callback","$chart","addEventListener","e","target","setPosition","height","$toolTip","offsetHeight","width","offsetWidth","anchorX","anchorY","offsetX","offsetY","style","top","pageY","left","pageX","box","getBoundingClientRect","pageXOffset","pageYOffset","x2","y2","parseInt","baseVal","tooltipSelector","Bar","Pie","donut","container","createElement","body","appendChild","$point","tooltipText","transformTooltipTextFnc","tooltipFnc","meta","innerHTML"],"mappings":"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","file":"chartist-plugin-tooltip.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.tooltip'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  /**\n   * Chartist.js plugin to display a data label on top of the points in a line chart.\n   *\n   */\n  /* global Chartist */\n  (function (window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      currency: undefined,\n      currencyFormatCallback: undefined,\n      tooltipOffset: {\n        x: 0,\n        y: -20\n      },\n      anchorToPoint: false,\n      appendToBody: false,\n      class: undefined,\n      pointClass: 'ct-point'\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.tooltip = function (options) {\n      options = Chartist.extend({}, defaultOptions, options);\n\n      return function tooltip(chart) {\n        // go trough the dataset and set tooltip content for each data point\n        updateTooltipContentFromDataset(chart);\n\n        var tooltipSelector;\n        if (chart instanceof Chartist.Bar) {\n          tooltipSelector = options.pointClass || 'ct-bar';\n        } else if (chart instanceof Chartist.Pie) {\n          // Added support for donut graph\n          if (chart.options.donut) {\n            tooltipSelector = options.pointClass || 'ct-slice-donut';\n          } else {\n            tooltipSelector = options.pointClass || 'ct-slice-pie';\n          }\n        }\n\n        var $chart = chart.container;\n        var $toolTip = $chart.querySelector('.chartist-tooltip');\n        if (!$toolTip) {\n          $toolTip = document.createElement('div');\n          $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n          if (!options.appendToBody) {\n            $chart.appendChild($toolTip);\n          } else {\n            document.body.appendChild($toolTip);\n          }\n        }\n        var height = $toolTip.offsetHeight;\n        var width = $toolTip.offsetWidth;\n\n        hide($toolTip);\n\n        function on(event, selector, callback) {\n          $chart.addEventListener(event, function (e) {\n            if (!selector || hasClass(e.target, selector))\n              callback(e);\n          });\n        }\n\n        on('mouseover', tooltipSelector, function (event) {\n          var $point = (chart.options.donut) ? event.target.parentNode : event.target;\n          var tooltipText = '';\n          var value = $point.getAttribute('data-tooltip');\n\n          if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n            value = options.transformTooltipTextFnc(value);\n          }\n\n          if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n            tooltipText = options.tooltipFnc(meta, value);\n          } else {\n            if (value) {\n              if (options.currency) {\n                if (options.currencyFormatCallback != undefined) {\n                  value = options.currencyFormatCallback(value, options);\n                } else {\n                  value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,');\n                }\n              }\n              value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\n              tooltipText += value;\n            }\n          }\n\n          if(tooltipText) {\n            $toolTip.innerHTML = tooltipText;\n            setPosition(event);\n            show($toolTip);\n\n            // Remember height and width to avoid wrong position in IE\n            height = $toolTip.offsetHeight;\n            width = $toolTip.offsetWidth;\n          }\n        });\n\n        on('mouseout', tooltipSelector, function () {\n          hide($toolTip);\n        });\n\n        on('mousemove', null, function (event) {\n          if (false === options.anchorToPoint)\n            setPosition(event);\n        });\n\n        function setPosition(event) {\n          height = height || $toolTip.offsetHeight;\n          width = width || $toolTip.offsetWidth;\n          var offsetX = - width / 2 + options.tooltipOffset.x\n          var offsetY = - height + options.tooltipOffset.y;\n          var anchorX, anchorY;\n\n          if (!options.appendToBody) {\n            var box = $chart.getBoundingClientRect();\n            var left = event.pageX - box.left - window.pageXOffset ;\n            var top = event.pageY - box.top - window.pageYOffset ;\n\n            if (true === options.anchorToPoint && event.target.x2 && event.target.y2) {\n              anchorX = parseInt(event.target.x2.baseVal.value);\n              anchorY = parseInt(event.target.y2.baseVal.value);\n            }\n\n            $toolTip.style.top = (anchorY || top) + offsetY + 'px';\n            $toolTip.style.left = (anchorX || left) + offsetX + 'px';\n          } else {\n            $toolTip.style.top = event.pageY + offsetY + 'px';\n            $toolTip.style.left = event.pageX + offsetX + 'px';\n          }\n        }\n      }\n\n      function updateTooltipContentFromDataset(chart) {\n        chart.on('draw', function(data) {\n          var series = data.series,\n              index = data.index,\n              dataElement = data.element,\n              dataPoint,\n              tooltipContent;\n\n          if (data.type === 'bar') {\n            dataPoint = series[index];\n            // assign tooltip content value either from tooltip propetry or from value\n            tooltipContent = dataPoint.tooltip || dataPoint.value;\n            dataElement.attr({\n              'data-tooltip': tooltipContent\n            });\n          } else if (data.type === 'slice') {\n            // donut support\n            dataPoint = series;\n            tooltipContent = dataPoint.tooltip || dataPoint.value;\n            // get data element, required to set tooltip content to its parent\n            dataElement = document.querySelector('.' + dataElement._node.getAttribute('class') + '[value=\"' + dataPoint.value + '\"]');\n            var dataElementGroup = dataElement.parentNode;\n            dataElementGroup.setAttribute('data-tooltip', tooltipContent);\n          }\n        });\n      }\n    };\n\n    function show(element) {\n      if(!hasClass(element, 'tooltip-show')) {\n        element.className = element.className + ' tooltip-show';\n      }\n    }\n\n    function hide(element) {\n      var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\n      element.className = element.className.replace(regex, '').trim();\n    }\n\n    function hasClass(element, className) {\n      return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n    }\n\n    function next(element, className) {\n      do {\n        element = element.nextSibling;\n      } while (element && !hasClass(element, className));\n      return element;\n    }\n\n    function text(element) {\n      return element.innerText || element.textContent;\n    }\n\n  } (window, document, Chartist));\n\n  return Chartist.plugins.tooltip;\n\n}));\n"]}